version: "3.9"

networks:
  laravel_enviroment:

services:
  server:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/nginx.dockerfile
    ports:
      - 8000:80
    volumes:
      - ../back-lumina:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - postgres
      - mailpit
      - mongodb
    networks:
      - laravel_enviroment

  php:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/php.dockerfile
    volumes:
      - ../back-lumina/:/var/www/html:delegated
    networks:
      - laravel_enviroment

  postgres:
    image: "postgres:16"
    ports:
      - "5432:5432"
    volumes:
      - "./db-data/postgres:/var/lib/postgresql/data"
    environment:
      PGPASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_DATABASE:-lumina}
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    networks:
      - laravel_enviroment

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel_enviroment
    command: redis-server --appendonly yes --replica-read-only no

  mailpit:
    image: "axllent/mailpit:latest"
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
      - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    networks:
      - laravel_enviroment

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./db-data/mongo/:/data/db
    networks:
      - laravel_enviroment

  scheduler:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/php.dockerfile
    volumes:
      - ../back-lumina:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan", "schedule:work"]
    networks:
      - laravel_enviroment

  migrations:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/php.dockerfile
    depends_on:
      - postgres
    entrypoint: ["php", "artisan", "migrate"]
    networks:
      - laravel_enviroment

  artisan:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel_enviroment

  composer:
    build:
      context: ..
      dockerfile: infra-lumina/dockerfiles/composer.dockerfile
    volumes:
      - ../back-lumina:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_enviroment

  # php:
  #   build:
  #     dockerfile: ./back.Dockerfile
  #   working_dir: /var/www/
  #   env_file:
  #     - ./back-lumina/.env
  #   volumes:
  #     - ./back-lumina:/var/www
  #     # - ./infra/php.ini:/usr/local/etc/php/conf.d/zz-extra.ini
  #     # - ./infra/php.conf:/usr/local/etc/php-fpm.d/zz-extra.conf
  #   depends_on:
  #     composer:
  #       condition: service_completed_successfully
  #     migrations:
  #       condition: service_completed_successfully
  #
  # nginx:
  #   image: nginx:alpine
  #   depends_on:
  #     php:
  #       condition: service_started
  #   ports:
  #     - 8000:80
  #   working_dir: /var/www
  #   volumes:
  #     - ./back-lumina:/var/www
  #     - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
  #   restart: unless-stopped
