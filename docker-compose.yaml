services:
  server:
    build:
      context: dockerfiles
      dockerfile: nginx.dockerfile
    ports:
      - 8000:80
    volumes:
      - ../back-lumina:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - postgres
      - mailpit
      - mongodb
    container_name: laravel_enviroment_server
    networks:
      - laravel_enviroment

  php:
    build:
      context: dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ../back-lumina/:/var/www/html:delegated
    container_name: php_laravel_enviroment
    networks:
      - laravel_enviroment

  composer:
    build:
      context: dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ../back-lumina:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_enviroment

  postgres:
    image: "postgres:16"
    ports:
      - "5432:5432"
    volumes:
      - "./db-data/postgres:/var/lib/postgresql/data"
    environment:
      PGPASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ############################################################################

  # composer:
  #   build:
  #     dockerfile: ./back.Dockerfile
  #   entrypoint: ["composer", "install"]
  #
  # migrations:
  #   build:
  #     dockerfile: ./back.Dockerfile
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   entrypoint: ["php", "artisan", "migrate"]
  #
  # php:
  #   build:
  #     dockerfile: ./back.Dockerfile
  #   working_dir: /var/www/
  #   env_file:
  #     - ./back-lumina/.env
  #   volumes:
  #     - ./back-lumina:/var/www
  #     # - ./infra/php.ini:/usr/local/etc/php/conf.d/zz-extra.ini
  #     # - ./infra/php.conf:/usr/local/etc/php-fpm.d/zz-extra.conf
  #   depends_on:
  #     composer:
  #       condition: service_completed_successfully
  #     migrations:
  #       condition: service_completed_successfully
  #
  # nginx:
  #   image: nginx:alpine
  #   depends_on:
  #     php:
  #       condition: service_started
  #   ports:
  #     - 8000:80
  #   working_dir: /var/www
  #   volumes:
  #     - ./back-lumina:/var/www
  #     - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
  #   restart: unless-stopped
